class Vingrinajums:
    def __init__(self, nosaukums, seti, atkartojums):
        self.nosaukums = nosaukums
        self.seti = seti
        self.atkartojums = atkartojums

    def __str__(self):
        return f"{self.nosaukums}: {self.seti} seti pa {self.atkartojums} atkārībām"


class TreninsPlans:
    def __init__(self):
        self.vingrinajumi = []

    def pievienot_vingrinajumu(self, vingrinajums):
        self.vingrinajumi.append(vingrinajums)

    def paradit_planu(self):
        print("Jūsu treniņa plāns:")
        for vingrinajums in self.vingrinajumi:
            print(vingrinajums)


def galvena_funkcija():
    plans = TreninsPlans()

    while True:
        print("\nIzvēlieties opciju:")
        print("1. Pievienot vingrinājumu")
        print("2. Skatīt treniņa plānu")
        print("3. Iziet")
        izvele = input("Ievadiet savu izvēli: ")

        if izvele == "1":
            nosaukums = input("Ievadiet vingrinājuma nosaukumu: ")
            seti = int(input("Ievadiet setu skaitu: "))
            atkartojums = int(input("Ievadiet atkārību skaitu uz setu: "))
            vingrinajums = Vingrinajums(nosaukums, seti, atkartojums)
            plans.pievienot_vingrinajumu(vingrinajums)
            print("Vingrinājums pievienots jūsu plānam!")
        elif izvele == "2":
            plans.paradit_planu()
        elif izvele == "3":
            print("Programma tiek izslēgta...")
            break
        else:
            print("Nepareiza izvēle! Lūdzu, mēģiniet vēlreiz.")


if __name__ == "__main__":
    galvena_funkcija()

